# Prototype
snippet proto
	${1}.prototype.${2} = function(${3}) {
		${4}
	};
# Function
snippet fun
	function ${1} (${2}) {
		${3}
	}
#GeneratorFunction
snippet gf
	function * (${1}) {
		${2}	
	}
# Anonymous Function
snippet f
	function (${1}) {
		${2}
	}
# if
snippet if
	if (${1}) {${2}
	}
# if ... else
snippet ife
	if (${1}) {
		${2}
	} else {
		${3}
	}
# switch
snippet switch
	switch(${1}) {
		case '${3}':
			${4}
			break;
		${5}
		default:
			${2}
	}
# case
snippet case
	case '${1}':
		${2}
		break;
	${3}
# for (...) {...} (Improved Native For-Loop)
snippet forr
	for (var ${2:i} = ${1:Things}.length - 1; $2 >= 0; $2${3:--}) {
		${4:$1[$2]}
	};
# while (...) {...}
snippet wh
	while (${1:/* condition */}) {
		${2:/* code */}
	}
snippet forin
	for (var ${1:key} in ${2}) {
		${3}	
	}
# do...while
snippet do
	do {
		${2:/* code */}
	} while (${1:/* condition */});
# Object Method
snippet :f
	${1:method_name}: function(${2:attribute}) {
		${4}
	}${3:,}
# setTimeout function
snippet timeout
	setTimeout(function() {${3}}${2}, ${1:10};
snippet dgi
	document.getElementById("${1}");
snippet dgt
	document.getElementsByTagName("${1}");
snippet dq
	document.querySelector("${1}");
snippet al
	alert(${1});
snippet cl
	console.log(${1});
snippet for 
	for (var i = 0; i < ${1}.length; i++) {
		${2}	
	}
snippet try
	try {
		${1}
	} catch (err) {
		${2}
	}
snippet re
	var ${1} = require('${2}');
